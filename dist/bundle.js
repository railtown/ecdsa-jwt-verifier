!function(t,r){for(var e in r)t[e]=r[e]}(exports,function(t){var r={};function e(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,e),o.l=!0,o.exports}return e.m=t,e.c=r,e.d=function(t,r,n){e.o(t,r)||Object.defineProperty(t,r,{enumerable:!0,get:n})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,r){if(1&r&&(t=e(t)),8&r)return t;if(4&r&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&r&&"string"!=typeof t)for(var o in t)e.d(n,o,function(r){return t[r]}.bind(null,o));return n},e.n=function(t){var r=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(r,"a",r),r},e.o=function(t,r){return Object.prototype.hasOwnProperty.call(t,r)},e.p="",e(e.s=0)}([function(t,r,e){"use strict";function n(t,r,e){if(void 0===e&&(e={}),!r.codes){r.codes={};for(var n=0;n<r.chars.length;++n)r.codes[r.chars[n]]=n}if(!e.loose&&t.length*r.bits&7)throw new SyntaxError("Invalid padding");for(var o=t.length;"="===t[o-1];)if(--o,!(e.loose||(t.length-o)*r.bits&7))throw new SyntaxError("Invalid padding");for(var i=new(e.out||Uint8Array)(o*r.bits/8|0),a=0,u=0,c=0,f=0;f<o;++f){var l=r.codes[t[f]];if(void 0===l)throw new SyntaxError("Invalid character "+t[f]);u=u<<r.bits|l,(a+=r.bits)>=8&&(a-=8,i[c++]=255&u>>a)}if(a>=r.bits||255&u<<8-a)throw new SyntaxError("Unexpected end of data");return i}e.r(r),e.d(r,"verifyEcdsaJwt",(function(){return c}));var o={chars:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bits:6},i=function(t,r){return n(t,o,r)};const a=new Map([["ES256","SHA-256"],["ES384","SHA-348"],["ES512","SHA-512"]]);function u(t){const{header:{alg:r}}=function(t){const{headerb64:r,payloadb64:e}=t.split(".");return{header:atob(r),payload:atob(e)}}(t);if(!a.has(r))throw new Error("Algorithm not acceptable");return a.get(r)}async function c(t,r){const e=i(r.split(".")[2]);const n=function(t){return(new TextEncoder).encode(t.split(".").slice(0,2).join("."))}(r);return await window.crypto.subtle.verify({name:"ECDSA",hash:{name:u(r)}},function({alg:t,...r}){return r}(t),e,n)}}]));
//# sourceMappingURL=bundle.js.map