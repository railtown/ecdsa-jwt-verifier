{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/rfc4648/lib/index.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","parse","string","encoding","opts","codes","chars","length","loose","bits","SyntaxError","end","out","Uint8Array","buffer","written","_i","undefined","base64UrlEncoding","base64url","hashMap","Map","determineHash","jwt","header","alg","headerb64","payloadb64","split","atob","payload","parseJwt","has","Error","async","verifyEcdsaJwt","token","signature","message","TextEncoder","encode","slice","join","getJwtMessage","window","crypto","subtle","verify","hash","remainder","cleanUpJwk"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* eslint-disable @typescript-eslint/strict-boolean-expressions */\nfunction parse(string, encoding, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  // Build the character lookup table:\n  if (!encoding.codes) {\n    encoding.codes = {};\n\n    for (var i = 0; i < encoding.chars.length; ++i) {\n      encoding.codes[encoding.chars[i]] = i;\n    }\n  } // The string must have a whole number of bytes:\n\n\n  if (!opts.loose && string.length * encoding.bits & 7) {\n    throw new SyntaxError('Invalid padding');\n  } // Count the padding bytes:\n\n\n  var end = string.length;\n\n  while (string[end - 1] === '=') {\n    --end; // If we get a whole number of bytes, there is too much padding:\n\n    if (!opts.loose && !((string.length - end) * encoding.bits & 7)) {\n      throw new SyntaxError('Invalid padding');\n    }\n  } // Allocate the output:\n\n\n  var out = new (opts.out || Uint8Array)(end * encoding.bits / 8 | 0); // Parse the data:\n\n  var bits = 0; // Number of bits currently in the buffer\n\n  var buffer = 0; // Bits waiting to be written out, MSB first\n\n  var written = 0; // Next byte to write\n\n  for (var _i = 0; _i < end; ++_i) {\n    // Read one character from the string:\n    var value = encoding.codes[string[_i]];\n\n    if (value === undefined) {\n      throw new SyntaxError('Invalid character ' + string[_i]);\n    } // Append the bits to the buffer:\n\n\n    buffer = buffer << encoding.bits | value;\n    bits += encoding.bits; // Write out some bits if the buffer has a byte's worth:\n\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 0xff & buffer >> bits;\n    }\n  } // Verify that we have received just enough bits:\n\n\n  if (bits >= encoding.bits || 0xff & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n\n  return out;\n}\nfunction stringify(data, encoding, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  var _opts = opts,\n      _opts$pad = _opts.pad,\n      pad = _opts$pad === void 0 ? true : _opts$pad;\n  var mask = (1 << encoding.bits) - 1;\n  var out = '';\n  var bits = 0; // Number of bits currently in the buffer\n\n  var buffer = 0; // Bits waiting to be written out, MSB first\n\n  for (var i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = buffer << 8 | 0xff & data[i];\n    bits += 8; // Write out as much as we can:\n\n    while (bits > encoding.bits) {\n      bits -= encoding.bits;\n      out += encoding.chars[mask & buffer >> bits];\n    }\n  } // Partial character:\n\n\n  if (bits) {\n    out += encoding.chars[mask & buffer << encoding.bits - bits];\n  } // Add padding characters until we hit a byte boundary:\n\n\n  if (pad) {\n    while (out.length * encoding.bits & 7) {\n      out += '=';\n    }\n  }\n\n  return out;\n}\n\n/* eslint-disable @typescript-eslint/strict-boolean-expressions */\nvar base16Encoding = {\n  chars: '0123456789ABCDEF',\n  bits: 4\n};\nvar base32Encoding = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bits: 5\n};\nvar base32HexEncoding = {\n  chars: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bits: 5\n};\nvar base64Encoding = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bits: 6\n};\nvar base64UrlEncoding = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bits: 6\n};\nvar base16 = {\n  parse: function parse$1(string, opts) {\n    return parse(string.toUpperCase(), base16Encoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base16Encoding, opts);\n  }\n};\nvar base32 = {\n  parse: function parse$1(string, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    return parse(opts.loose ? string.toUpperCase().replace(/0/g, 'O').replace(/1/g, 'L').replace(/8/g, 'B') : string, base32Encoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base32Encoding, opts);\n  }\n};\nvar base32hex = {\n  parse: function parse$1(string, opts) {\n    return parse(string, base32HexEncoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base32HexEncoding, opts);\n  }\n};\nvar base64 = {\n  parse: function parse$1(string, opts) {\n    return parse(string, base64Encoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base64Encoding, opts);\n  }\n};\nvar base64url = {\n  parse: function parse$1(string, opts) {\n    return parse(string, base64UrlEncoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base64UrlEncoding, opts);\n  }\n};\nvar codec = {\n  parse: parse,\n  stringify: stringify\n};\n\nexport { base16, base32, base32hex, base64, base64url, codec };\n//# sourceMappingURL=index.js.map\n","import { base64url } from \"rfc4648\";\n\nfunction parseJwt(jwt) {\n  const { headerb64, payloadb64 } = jwt.split(\".\");\n\n  const header = atob(headerb64);\n  const payload = atob(payloadb64);\n\n  return { header, payload };\n}\n\nconst hashMap = new Map([\n  [\"ES256\", \"SHA-256\"],\n  [\"ES384\", \"SHA-348\"],\n  [\"ES512\", \"SHA-512\"],\n]);\n\nfunction determineHash(jwt) {\n  const {\n    header: { alg },\n  } = parseJwt(jwt);\n  if (!hashMap.has(alg)) {\n    throw new Error(\"Algorithm not acceptable\");\n  }\n  return hashMap.get(alg);\n}\n\nfunction cleanUpJwk({ alg, ...remainder }) {\n  return remainder;\n}\n\nfunction getJwtMessage(jwt) {\n  return new TextEncoder().encode(jwt.split(\".\").slice(0, 2).join(\".\"));\n}\n\nfunction getJwtSignature(jwt) {\n  return base64url.parse(jwt.split(\".\")[2]);\n}\n\n/**\n * Verifies an ECDSA-signed JWT.\n * @param {object} key An object representing the JWK-formatted public key that\n *   will be used to verify the ECDA-signed JWT\n * @param {string} token The ECDSA-signed JWT to be verified\n */\nexport async function verifyEcdsaJwt(key, token) {\n  const signature = getJwtSignature(token);\n  const message = getJwtMessage(token);\n\n  let result = await window.crypto.subtle.verify(\n    {\n      name: \"ECDSA\",\n      hash: { name: determineHash(token) },\n    },\n    cleanUpJwk(key),\n    signature,\n    message\n  );\n\n  return result;\n}\n"],"sourceRoot":""}